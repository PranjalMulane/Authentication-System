{"version":3,"sources":["actions/auth.js","actions/types.js","components/Navbar.js","containers/Home.js","containers/Login.js","containers/Signup.js","containers/Activate.js","containers/ResetPassword.js","containers/ResetPasswordConfirm.js","reducers/auth.js","reducers/index.js","store.js","hocs/Layout.js","App.js","index.js"],"names":["load_user","dispatch","a","localStorage","getItem","config","headers","axios","get","process","res","type","payload","data","connect","state","isAuthenticated","auth","logout","authLinks","className","onClick","href","guestLinks","exact","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Home","class","role","login","email","password","body","JSON","stringify","post","useState","formData","setFormData","onChange","e","target","name","value","onSubmit","preventDefault","placeholder","required","minLength","signup","re_password","accountCreated","setAccountCreated","verify","uid","token","props","verified","setVerified","style","display","justifyContent","alignItems","flexDirection","marginTop","match","params","reset_password","requestSent","setRequestSent","reset_password_confirm","new_password","re_new_password","initialState","access","refresh","user","combineReducers","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","checkAuthenticated","window","code","useEffect","fetchData","Navbar","children","App","path","component","Login","Signup","ResetPassword","ResetPasswordConfirm","Activate","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b517cb42.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAIL,\r\n    RESET_PASSWORD_SUCCESS,\r\n    RESET_PASSWORD_FAIL,\r\n    RESET_PASSWORD_CONFIRM_SUCCESS,\r\n    RESET_PASSWORD_CONFIRM_FAIL,\r\n    LOGOUT,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_FAIL,\r\n    AUTHENTICATED_SUCCESS\r\n} from './types';\r\n\r\nexport const checkAuthenticated = () => async dispatch => {\r\n    if (typeof window == 'undefined') {\r\n        dispatch({\r\n            type: AUTHENTICATED_FAIL\r\n        });\r\n    }\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n    \r\n        const body = JSON.stringify({ token: localStorage.getItem('access') });\r\n    \r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/verify/`, body, config);\r\n    \r\n            if (res.data.code !== 'token_not_valid') {\r\n                dispatch({\r\n                    type: AUTHENTICATED_SUCCESS\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: AUTHENTICATED_FAIL\r\n                });\r\n            }\r\n        } catch (err) {\r\n            dispatch({\r\n                type: AUTHENTICATED_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: AUTHENTICATED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const load_user = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                'Accept': 'application/json'\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\r\n\r\n            dispatch({\r\n                type: USER_LOADED_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: USER_LOADED_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: USER_LOADED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email, password });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config);\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(load_user());\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const signup = ({ name, email, password, re_password }) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ name, email, password, re_password }); \r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/`, body, config);\r\n\r\n        dispatch({\r\n            type: SIGNUP_SUCCESS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: SIGNUP_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const verify = (uid, token) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ uid, token }); \r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/activation/`, body, config);\r\n\r\n        dispatch({\r\n            type: ACTIVATION_SUCCESS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: ACTIVATION_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const reset_password = (email) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ email }); \r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password/`, body, config);\r\n\r\n        dispatch({\r\n            type: RESET_PASSWORD_SUCCESS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: RESET_PASSWORD_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ uid, token, new_password, re_new_password }); \r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`, body, config);\r\n\r\n        dispatch({\r\n            type: RESET_PASSWORD_CONFIRM_SUCCESS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: RESET_PASSWORD_CONFIRM_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n    dispatch({ type: LOGOUT });\r\n};","export const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\r\nexport const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\r\nexport const RESET_PASSWORD_SUCCESS = 'RESET_PASSWORD_SUCCESS';\r\nexport const RESET_PASSWORD_FAIL = 'RESET_PASSWORD_FAIL';\r\nexport const RESET_PASSWORD_CONFIRM_SUCCESS = 'RESET_PASSWORD_CONFIRM_SUCCESS';\r\nexport const RESET_PASSWORD_CONFIRM_FAIL = 'RESET_PASSWORD_CONFIRM_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\r\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\r\nexport const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\r\nexport const USER_LOADED_FAIL = 'USER_LOADED_FAIL';","import React, { Fragment } from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../actions/auth';\r\n\r\nconst navbar = ({ isAuthenticated, logout }) => {\r\n    const authLinks = (\r\n        <li className=\"nav-item\">\r\n            <a className='nav-link' onClick={logout} href='#!'>Logout</a>\r\n        </li>\r\n    );\r\n\r\n    const guestLinks = (\r\n        <Fragment>\r\n            <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link active\" exact to='/login'>Login</NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link active\" exact to='/signup'>Sign Up</NavLink>\r\n            </li>\r\n        </Fragment>\r\n    );\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <Link className=\"navbar-brand\" to='/'>Authentication</Link>\r\n            <button \r\n                className=\"navbar-toggler\"\r\n                type=\"button\"\r\n                data-toggle=\"collapse\"\r\n                data-target=\"#navbarNav\"\r\n                aria-controls=\"navbarNav\"\r\n                aria-expanded=\"false\"\r\n                aria-label=\"Toggle navigation\"\r\n            >\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link active\" exact to='/'>Home</NavLink>\r\n                    </li>\r\n                    { <Fragment>{ isAuthenticated ? authLinks : guestLinks }</Fragment> }\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(navbar);","import React from 'react';\r\nimport Navbar from '../components/Navbar';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Home = () =>(\r\n    <div className='container'>\r\n      <div class='jumbotron mt-5'>\r\n        <h1 class='display-4'>Welcome</h1>\r\n        <p class='lead'></p>\r\n        <hr class='my-4'/>\r\n        <p>Click the Log In button</p>\r\n      \r\n        <Link class='btn btn-dark btn-lg' to='/login' role='button'>Login</Link>\r\n      \r\n      </div>\r\n    </div>\r\n);\r\n\r\nexport default Home;","import React, { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const { email, password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        login(email, password);\r\n    };\r\n\r\n    if (isAuthenticated)\r\n        return <Redirect to='/' />;\r\n    \r\n    return (\r\n        <div className='container mt-5'>\r\n            <h1>Sign In</h1>\r\n            <p>Sign into your Account</p>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input \r\n                        className='form-control'\r\n                        type='email'\r\n                        placeholder='Email'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='Password'\r\n                        name='password'\r\n                        value={password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-dark' type='submit'>Login</button>\r\n            </form>\r\n            <p className='mt-3'>\r\n            Don't have an account? <Link to='/signup'>Sign Up</Link>\r\n            </p>\r\n            <p className='mt-3'>\r\n            Forgot your Password? <Link to='/reset_password'>Reset Password</Link>\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { signup } from '../actions/auth';\r\n\r\nconst Signup = ({ signup, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        re_password: ''\r\n    });\r\n\r\n    const [accountCreated, setAccountCreated] = useState(false);\r\n\r\n    const { name, email, password, re_password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (password === re_password) {\r\n            signup({ name, email, password, re_password });\r\n            setAccountCreated(true);\r\n        }\r\n    };\r\n\r\n    if (isAuthenticated)\r\n        return <Redirect to='/' />;\r\n    if (accountCreated)\r\n        return <Redirect to='login' />;\r\n    \r\n    return (\r\n        <div className='container mt-5'>\r\n            <h1>Sign Up</h1>\r\n            <p>Create your Account</p>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input \r\n                        className='form-control'\r\n                        type='text'\r\n                        placeholder='Name*'\r\n                        name='name'\r\n                        value={name}\r\n                        onChange={e => onChange(e)}\r\n                        required \r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input \r\n                        className='form-control'\r\n                        type='email'\r\n                        placeholder='Email*'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                        required \r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='Password*'\r\n                        name='password'\r\n                        value={password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='Confirm Password*'\r\n                        name='re_password'\r\n                        value={re_password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-dark' type='submit'>Register</button>\r\n            </form>\r\n            <p className='mt-3'>\r\n                Already have an account? <Link to='/login'>Sign In</Link>\r\n            </p>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps, { signup })(Signup);","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { verify } from '../actions/auth';\r\n\r\nconst Activate = (props) => {\r\n    const [verified, setVerified] = useState(false);\r\n\r\n    const verify_account = e => {\r\n        const uid = props.match.params.uid;\r\n        const token = props.match.params.token;\r\n\r\n        props.verify(uid, token);\r\n        setVerified(true);\r\n    };\r\n\r\n    if (verified)\r\n        return <Redirect to='/' />\r\n    return (\r\n        <div className='container'>\r\n            <div style={{ display: 'flex', \r\n            justifyContent: 'center', \r\n            alignItems: 'center', \r\n            flexDirection: 'column',\r\n            marginTop: '400px' }}>\r\n                \r\n                <h1>Verify your Account:</h1>\r\n                <button \r\n                    onClick={verify_account}\r\n                    style={{ marginTop: '50px' }}\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                >\r\n                    Verify\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, { verify })(Activate);","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { reset_password } from '../actions/auth';\r\n\r\nconst ResetPassword = (props) => {\r\n    const [requestSent, setRequestSent] = useState(false);\r\n\r\n    const [formData, setFormData] = useState({\r\n        email: ''\r\n    });\r\n\r\n    const { email } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        props.reset_password(email);\r\n        setRequestSent(true);\r\n    };\r\n\r\n    if (requestSent)\r\n        return <Redirect to='/' />\r\n    return (\r\n        <div className='container mt-5'>\r\n            <h1>Request Password Reset:</h1>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input \r\n                        className='form-control'\r\n                        type='email'\r\n                        placeholder='Your Email'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-dark' type='submit'>Reset Password</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, { reset_password })(ResetPassword);","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { reset_password_confirm } from '../actions/auth';\r\n\r\nconst ResetPasswordConfirm = (props) => {\r\n    const [requestSent, setRequestSent] = useState(false);\r\n\r\n    const [formData, setFormData] = useState({\r\n        new_password: '',\r\n        re_new_password: ''\r\n    });\r\n\r\n    const { new_password, re_new_password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        \r\n        const uid = props.match.params.uid;\r\n        const token = props.match.params.token;\r\n\r\n        props.reset_password_confirm(uid, token, new_password, re_new_password);\r\n        setRequestSent(true);\r\n    };\r\n\r\n    if (requestSent)\r\n        return <Redirect to='/' />\r\n    return (\r\n        <div className='container mt-5'>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input \r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='New Password'\r\n                        name='new_password'\r\n                        value={new_password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='Confirm New Password'\r\n                        name='re_new_password'\r\n                        value={re_new_password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-dark' type='submit'>Reset Password</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, { reset_password_confirm })(ResetPasswordConfirm);","import {\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    AUTHENTICATED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    access: localStorage.getItem('access'),\r\n    refresh: localStorage.getItem('refresh'),\r\n    isAuthenticated: null,\r\n    user: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case AUTHENTICATED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('access', payload.access);\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                access: payload.access,\r\n                refresh: payload.refresh\r\n            }\r\n        case USER_LOADED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: payload\r\n            }\r\n        case SIGNUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case AUTHENTICATED_FAIL:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case USER_LOADED_FAIL:\r\n            return {\r\n                ...state,\r\n                user: null\r\n            }\r\n        case SIGNUP_FAIL:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT:\r\n            localStorage.removeItem('access');\r\n            localStorage.removeItem('refresh');\r\n            return {\r\n                ...state,\r\n                access: null,\r\n                refresh: null,\r\n                isAuthenticated: false,\r\n                user: null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport auth from './auth';\r\n\r\nexport default combineReducers({\r\n    auth\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import React, { useEffect } from 'react';\r\nimport Navbar from '../components/Navbar';\r\nimport { connect } from 'react-redux';\r\nimport { checkAuthenticated, load_user } from '../actions/auth';\r\n\r\nconst Layout = (props) => {\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                await props.checkAuthenticated();\r\n                await props.load_user();\r\n            } catch (err) {\r\n\r\n            }\r\n        }\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, { checkAuthenticated, load_user })(Layout);","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Home from './containers/Home';\r\nimport Login from './containers/Login';\r\nimport Signup from './containers/Signup';\r\nimport Activate from './containers/Activate';\r\nimport ResetPassword from './containers/ResetPassword';\r\nimport ResetPasswordConfirm from './containers/ResetPasswordConfirm';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\nimport Layout from './hocs/Layout';\r\n\r\nconst App = () => (\r\n    <Provider store={store}>\r\n        <Router>\r\n            <Layout>\r\n                <Switch>\r\n                    <Route exact path='/' component={Home} />\r\n                    <Route exact path='/login' component={Login} />\r\n                    <Route exact path='/signup' component={Signup} />\r\n                    <Route exact path='/reset_password' component={ResetPassword} />\r\n                    <Route exact path='/password/reset/confirm/:uid/:token' component={ResetPasswordConfirm} />\r\n                    <Route exact path='/activate/:uid/:token' component={Activate} />\r\n                </Switch>\r\n            </Layout>\r\n        </Router>\r\n    </Provider>\r\n);\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}